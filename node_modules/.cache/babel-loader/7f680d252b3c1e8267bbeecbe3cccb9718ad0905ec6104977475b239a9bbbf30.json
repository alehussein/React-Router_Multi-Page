{"ast":null,"code":"var _jsxFileName = \"/Users/alejandrohussein/Desktop/React/Section-21-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport { EditEventPage } from './pages/EditEventPage';\nimport { RootLayout } from './pages/root';\nimport { EventDetailPage } from './pages/EventDetailPage';\nimport { EventsPage } from './pages/EventsPage';\nimport { NewEventPage } from './pages/NewEventPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst route = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }, this)\n  }, {\n    path: '/editEventPage',\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 40\n    }, this)\n  }, {\n    path: '/eventDetailPage',\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 41\n    }, this)\n  }, {\n    path: '/eventsPage',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 36\n    }, this)\n  }, {\n    path: '/newEventsPage',\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 39\n    }, this)\n  }]\n}]);\n\n// const router = createBrowserRouter([\n//   {\n//     path: '/',\n//     element: <RootLayout />,\n//     errorElement: <ErrorPage />,\n//     children: [\n//       { path: '/', element: <HomePage /> },\n//       { path: '/about', element: <AboutPage /> },\n//       { path: '/products', element: <ProductsPage />, },\n//       { path: '/products/:productId', element: <ProductDetailPage /> }\n//     ]\n//   },\n\n// ])\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    store: route,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 40\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EditEventPage","RootLayout","EventDetailPage","EventsPage","NewEventPage","jsxDEV","_jsxDEV","route","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","App","store","_c","$RefreshReg$"],"sources":["/Users/alejandrohussein/Desktop/React/Section-21-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport {createBrowserRouter, RouterProvider} from 'react-router-dom'\nimport HomePage from './pages/HomePage';\nimport { EditEventPage } from './pages/EditEventPage';\nimport { RootLayout } from './pages/root';\nimport { EventDetailPage } from './pages/EventDetailPage';\nimport {EventsPage} from './pages/EventsPage'\nimport {NewEventPage} from './pages/NewEventPage'\n\n\nconst route = createBrowserRouter([\n  {\n    path: '/',\n    element: <RootLayout />,\n    children: [\n    { path: '/', element: <HomePage /> },\n    { path: '/editEventPage', element: <EditEventPage /> },\n    {path: '/eventDetailPage', element: <EventDetailPage />},\n    {path: '/eventsPage', element: <EventsPage />},\n    {path: '/newEventsPage', element: <NewEventPage />}\n  ]\n  }\n])\n\n\n// const router = createBrowserRouter([\n//   {\n//     path: '/',\n//     element: <RootLayout />,\n//     errorElement: <ErrorPage />,\n//     children: [\n//       { path: '/', element: <HomePage /> },\n//       { path: '/about', element: <AboutPage /> },\n//       { path: '/products', element: <ProductsPage />, },\n//       { path: '/products/:productId', element: <ProductDetailPage /> }\n//     ]\n//   },\n\n// ])\n\nfunction App() {\n  return <RouterProvider store={route}><div>Home</div></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAAQC,UAAU,QAAO,oBAAoB;AAC7C,SAAQC,YAAY,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,KAAK,GAAGV,mBAAmB,CAAC,CAChC;EACEW,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACL,UAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,QAAQ,EAAE,CACV;IAAEN,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAEH,OAAA,CAACP,QAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACpC;IAAEL,IAAI,EAAE,gBAAgB;IAAEC,OAAO,eAAEH,OAAA,CAACN,aAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACtD;IAACL,IAAI,EAAE,kBAAkB;IAAEC,OAAO,eAAEH,OAAA,CAACJ,eAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,CAAC,EACxD;IAACL,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAEH,OAAA,CAACH,UAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,CAAC,EAC9C;IAACL,IAAI,EAAE,gBAAgB;IAAEC,OAAO,eAAEH,OAAA,CAACF,YAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,CAAC;AAErD,CAAC,CACF,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASE,GAAGA,CAAA,EAAG;EACb,oBAAOT,OAAA,CAACR,cAAc;IAACkB,KAAK,EAAET,KAAM;IAAAO,QAAA,eAACR,OAAA;MAAAQ,QAAA,EAAK;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAgB,CAAC;AACvE;AAACI,EAAA,GAFQF,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}