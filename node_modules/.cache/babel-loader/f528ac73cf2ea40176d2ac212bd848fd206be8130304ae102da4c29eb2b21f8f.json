{"ast":null,"code":"var _jsxFileName = \"/Users/alejandrohussein/Desktop/React/Section-21-adv-starting-project/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport EventsList from '../components/EventsList';\nimport { defer, json, useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\n;\nconst loadEvents = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return json({\n      message: 'cloud not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nexport const loader = () => {\n  return defer({\n    events: loadEvents()\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","defer","json","useLoaderData","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/alejandrohussein/Desktop/React/Section-21-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import EventsList from '../components/EventsList';\nimport { defer, json, useLoaderData } from 'react-router-dom';\n\n\nexport default function EventsPage() {\n  const data = useLoaderData()\n  const events = data.events\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n  return <EventsList events={events} />\n};\n\nconst loadEvents = async () => {\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    return json(\n      { message: 'cloud not fetch events' },\n      { status: 500 }\n    );\n  } else {\n    return response\n  }\n}\n\n\nexport const loader = () => {\n  return defer({\n    events: loadEvents(),\n  })\n};"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9D,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,IAAI,GAAGL,aAAa,CAAC,CAAC;EAC5B,MAAMM,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B;EACA;EACA;EACA,oBAAOJ,OAAA,CAACL,UAAU;IAACS,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACN,EAAA,CAPuBD,UAAU;EAAA,QACnBH,aAAa;AAAA;AAAAW,EAAA,GADJR,UAAU;AAOjC;AAED,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOhB,IAAI,CACT;MAAEiB,OAAO,EAAE;IAAyB,CAAC,EACrC;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAGD,OAAO,MAAMK,MAAM,GAAGA,CAAA,KAAM;EAC1B,OAAOpB,KAAK,CAAC;IACXQ,MAAM,EAAEM,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}